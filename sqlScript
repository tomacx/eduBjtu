create table course
(
    courseId    bigint auto_increment comment '课程ID'
        primary key,
    intro       text         null comment '课程介绍',
    outline     longblob     null comment '课程大纲图片数据',
    calendar    longblob     null comment '课程日历图片数据',
    teacherInfo text         null comment '教师信息',
    resources    varchar(255) null comment '课程资源路径'
);

create table student
(
    id         bigint      not null comment '主键'
        primary key,
    name       varchar(30) null comment '姓名',
    studentNum varchar(50) null comment '账号',
    passWord   varchar(50) null comment '密码'
);

create table homework
(
    homeworkId  bigint        not null comment '主键'
        primary key,
    courseId    bigint        not null comment '外键, 关联到课程',
    studentNum  varchar(50)   not null comment '学生学号，关联到学生',
    grade       decimal(5, 2) null comment '作业评分',
    avgGrade    decimal(5, 2) null comment '平均评分',
    mutualGrade decimal(5, 2) null comment '互评成绩',
    content     varchar(255)  null comment '作业内容存储地址',
    constraint homework_ibfk_1
        foreign key (courseId) references course (courseId),
    constraint homework_ibfk_2
        foreign key (studentNum) references student (studentNum)
)
    comment '作业表';

create index courseId
    on homework (courseId);

create index studentNum
    on homework (studentNum);

create table note
(
    noteId    bigint auto_increment comment '主键'
        primary key,
    studentId bigint not null comment '学生ID，外键',
    courseId  bigint not null comment '课程ID，外键',
    content   text   null comment '笔记内容',
    constraint fk_note_course
        foreign key (courseId) references course (courseId)
            on delete cascade,
    constraint fk_note_student
        foreign key (studentId) references student (id)
            on delete cascade
)
    comment '笔记表';

create index studentNum
    on student (studentNum);

create table teacher
(
    id         bigint auto_increment comment '主键'
        primary key,
    teacherNum varchar(50) not null comment '教师账号',
    name       varchar(30) null comment '姓名',
    password   varchar(50) not null comment '密码'
);

create table course_teacher_student
(
    id        bigint auto_increment comment '主键'
        primary key,
    courseId  bigint not null comment '课程ID',
    teacherId bigint not null comment '教师ID',
    studentId bigint not null comment '学生ID',
    constraint course_teacher_student_ibfk_1
        foreign key (courseId) references course (courseId)
            on delete cascade,
    constraint course_teacher_student_ibfk_2
        foreign key (teacherId) references teacher (id)
            on delete cascade,
    constraint course_teacher_student_ibfk_3
        foreign key (studentId) references student (id)
            on delete cascade
);

create index courseId
    on course_teacher_student (courseId);

create index studentId
    on course_teacher_student (studentId);

create index teacherId
    on course_teacher_student (teacherId);

create table notification
(
    notificationId bigint auto_increment comment '主键'
        primary key,
    teacherId      bigint                             not null comment '老师ID，外键',
    content        text                               not null comment '通知内容',
    createTime     datetime default CURRENT_TIMESTAMP null comment '创建时间',
    constraint fk_notification_teacher
        foreign key (teacherId) references teacher (id)
            on delete cascade
)
    comment '通知表';

create table notification_stu
(
    notificationId bigint            not null comment '通知ID，外键',
    studentId      bigint            not null comment '学生ID，外键',
    status         tinyint default 0 null comment '通知状态，0为未读，1为已读',
    primary key (notificationId, studentId),
    constraint fk_notification_stu_notification
        foreign key (notificationId) references notification (notificationId)
            on delete cascade,
    constraint fk_notification_stu_student
        foreign key (studentId) references student (id)
            on delete cascade
)
    comment '通知-学生关联表';

create table post
(
    postId    bigint auto_increment comment '主键'
        primary key,
    courseId  bigint        not null comment '课程ID，外键',
    studentId bigint        not null comment '学生ID，外键',
    teacherId bigint        not null comment '教师ID，外键',
    likeNum   int default 0 null comment '点赞数',
    favoNum   int default 0 null comment '收藏数',
    content   text          null comment '帖子内容',
    constraint fk_post_course
        foreign key (courseId) references course (courseId)
            on delete cascade,
    constraint fk_post_student
        foreign key (studentId) references student (id)
            on delete cascade,
    constraint fk_post_teacher
        foreign key (teacherId) references teacher (id)
            on delete cascade
)
    comment '帖子表';

create table comment
(
    commentId bigint auto_increment comment '主键'
        primary key,
    studentId bigint        not null comment '学生ID，外键',
    postId    bigint        not null comment '帖子ID，外键',
    likeNum   int default 0 null comment '点赞数',
    content   text          null comment '评论内容',
    constraint fk_comment_post
        foreign key (postId) references post (postId)
            on delete cascade,
    constraint fk_comment_student
        foreign key (studentId) references student (id)
            on delete cascade
)
    comment '评论表';

create table favorite
(
    favoriteId bigint auto_increment comment '主键'
        primary key,
    studentId  bigint not null comment '学生ID，外键',
    postId     bigint not null comment '帖子ID，外键',
    constraint fk_favorite_post
        foreign key (postId) references post (postId)
            on delete cascade,
    constraint fk_favorite_student
        foreign key (studentId) references student (id)
            on delete cascade
)
    comment '收藏表';

